#include <stdio.h>
#include <math.h>

// Function to be integrated
double f(double x) {
    return x*x;
}

// Trapezoidal rule for integration
double trapezoidal(double a, double b, int n) {
    double h = (b-a)/n;
    double sum = (f(a) + f(b))/2.0;
    for (int i = 1; i < n; i++) {
        sum += f(a+i*h);
    }
    return sum*h;
}

// Simpson's 1/3 rule for integration
double simpson13(double a, double b, int n) {
    double h = (b-a)/n;
    double sum = f(a) + f(b);
    for (int i = 1; i < n; i++) {
        if (i % 2 == 1) {
            sum += 4*f(a+i*h);
        } else {
            sum += 2*f(a+i*h);
        }
    }
    return sum*h/3.0;
}

// Simpson's 3/8 rule for integration
double simpson38(double a, double b, int n) {
    double h = (b-a)/n;
    double sum = f(a) + f(b);
    for (int i = 1; i < n; i++) {
        if (i % 3 == 0) {
            sum += 2*f(a+i*h);
        } else {
            sum += 3*f(a+i*h);
        }
    }
    return 3*h/8.0*sum;
}

int main(void) {
    double a = 0;
    double b = 1;
    int n = 10;
    printf("Trapezoidal: %.10f\n", trapezoidal(a, b, n));
    printf("Simpson 1/3: %.10f\n", simpson13(a, b, n));
    printf("Simpson 3/8: %.10f\n", simpson38(a, b, n));
    return 0;
}
